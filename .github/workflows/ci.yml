name: CI - Maven + Security + Push to ECR

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-2                     # <— change if needed
  ECR_REPOSITORY: fcb-attestationhub-server # <— your ECR repo
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-secure-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---- Maven (minimal) ----
      - name: Setup JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '8'
          cache: 'maven'

      - name: Build (skip tests for speed)
        run: mvn -B -ntp clean package -DskipTests

      - name: Unit Tests
        run: mvn -B -ntp test

      # ---- Security (minimal) ----
      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | \
            sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install -y trivy

      - name: FS vulnerability scan (Trivy)
        run: trivy fs --format json -o trivy-fs.json .

      - name: Install Gitleaks
        run: sudo apt-get install -y gitleaks

      - name: Secrets scan (Gitleaks)
        run: gitleaks detect --source . -r gitleaks-report.json -f json

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            trivy-fs.json
            gitleaks-report.json

      # ---- Build & Push Docker to ECR ----
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPOSITORY" >/dev/null

      - name: Build image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag   $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
                       $ECR_REGISTRY/$ECR_REPOSITORY:latest

      # Optional: image vulnerability scan BEFORE pushing
      - name: Trivy image scan
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          trivy image --format json \
            -o trivy-image.json \
            $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Upload image scan report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-image-report
          path: trivy-image.json

      - name: Push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "Pushed:"
          echo "  $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "  $ECR_REGISTRY/$ECR_REPOSITORY:latest"
